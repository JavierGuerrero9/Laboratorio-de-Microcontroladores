

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Fri Jun 03 11:59:25 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F45K50
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    21                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    22                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    24  0000                     
    25                           ; Version 2.35
    26                           ; Generated 05/05/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F45K50 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     _T1CON	set	4045
    61  0000                     _LATC	set	3979
    62  0000                     _LATCbits	set	3979
    63  0000                     _TRISD	set	3989
    64  0000                     _PIR1bits	set	3998
    65  0000                     _T1GCONbits	set	4044
    66  0000                     _TMR1L	set	4046
    67  0000                     _OSCCON	set	4051
    68  0000                     _TRISAbits	set	3986
    69  0000                     _LATD	set	3980
    70  0000                     _TRISCbits	set	3988
    71  0000                     _T0CON	set	4053
    72  0000                     _TMR1H	set	4047
    73  0000                     _TMR0L	set	4054
    74                           
    75                           	psect	smallconst
    76  000800                     __psmallconst:
    77                           	callstack 0
    78  000800  00                 	db	0
    79  000801                     STR_1:
    80  000801  46                 	db	70	;'F'
    81  000802  72                 	db	114	;'r'
    82  000803  65                 	db	101	;'e'
    83  000804  71                 	db	113	;'q'
    84  000805  75                 	db	117	;'u'
    85  000806  65                 	db	101	;'e'
    86  000807  6E                 	db	110	;'n'
    87  000808  63                 	db	99	;'c'
    88  000809  79                 	db	121	;'y'
    89  00080A  3A                 	db	58	;':'
    90  00080B  00                 	db	0
    91  00080C                     STR_2:
    92  00080C  30                 	db	48	;'0'
    93  00080D  30                 	db	48	;'0'
    94  00080E  30                 	db	48	;'0'
    95  00080F  20                 	db	32
    96  000810  48                 	db	72	;'H'
    97  000811  7A                 	db	122	;'z'
    98  000812  00                 	db	0
    99  000813  00                 	db	0	; dummy byte at the end
   100  0000                     
   101                           ; #config settings
   102                           
   103                           	psect	cinit
   104  000BA0                     __pcinit:
   105                           	callstack 0
   106  000BA0                     start_initialization:
   107                           	callstack 0
   108  000BA0                     __initialization:
   109                           	callstack 0
   110                           
   111                           ; Clear objects allocated to COMRAM (3 bytes)
   112  000BA0  6A17               	clrf	(__pbssCOMRAM+2)& (0+255),c
   113  000BA2  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
   114  000BA4  6A15               	clrf	__pbssCOMRAM& (0+255),c
   115  000BA6                     end_of_initialization:
   116                           	callstack 0
   117  000BA6                     __end_of__initialization:
   118                           	callstack 0
   119  000BA6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   120  000BA8  6EF8               	movwf	tblptru,c
   121  000BAA  0100               	movlb	0
   122  000BAC  EFF6  F004         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	bssCOMRAM
   125  000015                     __pbssCOMRAM:
   126                           	callstack 0
   127  000015                     _count:
   128                           	callstack 0
   129  000015                     	ds	2
   130  000017                     _LCDdir:
   131                           	callstack 0
   132  000017                     	ds	1
   133                           
   134                           	psect	cstackCOMRAM
   135  000001                     __pcstackCOMRAM:
   136                           	callstack 0
   137  000001                     ??_send_to_LCD:
   138  000001                     ?___wmul:
   139                           	callstack 0
   140  000001                     LCD_cmd@cx:
   141                           	callstack 0
   142  000001                     ___wmul@multiplier:
   143                           	callstack 0
   144                           
   145                           ; 2 bytes @ 0x0
   146  000001                     	ds	1
   147  000002                     ??_LCD_init:
   148  000002                     set_LCD_dir@d:
   149                           	callstack 0
   150  000002                     send_to_LCD@xy:
   151                           	callstack 0
   152  000002                     set_cursor_pos@col:
   153                           	callstack 0
   154                           
   155                           ; 1 bytes @ 0x1
   156  000002                     	ds	1
   157  000003                     ??_set_cursor_pos:
   158  000003                     write_string_LCD@s:
   159                           	callstack 0
   160  000003                     ___wmul@multiplicand:
   161                           	callstack 0
   162                           
   163                           ; 2 bytes @ 0x2
   164  000003                     	ds	2
   165  000005                     set_cursor_pos@row:
   166                           	callstack 0
   167  000005                     ___wmul@product:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0x4
   171  000005                     	ds	1
   172  000006                     set_cursor_pos@Pos:
   173                           	callstack 0
   174                           
   175                           ; 1 bytes @ 0x5
   176  000006                     	ds	1
   177  000007                     ?___awdiv:
   178                           	callstack 0
   179  000007                     ___awdiv@dividend:
   180                           	callstack 0
   181                           
   182                           ; 2 bytes @ 0x6
   183  000007                     	ds	2
   184  000009                     ___awdiv@divisor:
   185                           	callstack 0
   186                           
   187                           ; 2 bytes @ 0x8
   188  000009                     	ds	2
   189  00000B                     ___awdiv@counter:
   190                           	callstack 0
   191                           
   192                           ; 1 bytes @ 0xA
   193  00000B                     	ds	1
   194  00000C                     ___awdiv@sign:
   195                           	callstack 0
   196                           
   197                           ; 1 bytes @ 0xB
   198  00000C                     	ds	1
   199  00000D                     ___awdiv@quotient:
   200                           	callstack 0
   201                           
   202                           ; 2 bytes @ 0xC
   203  00000D                     	ds	2
   204  00000F                     write_int_LCD@x:
   205                           	callstack 0
   206                           
   207                           ; 2 bytes @ 0xE
   208  00000F                     	ds	2
   209  000011                     ??_write_int_LCD:
   210                           
   211                           ; 1 bytes @ 0x10
   212  000011                     	ds	1
   213  000012                     write_int_LCD@UnitDigit:
   214                           	callstack 0
   215                           
   216                           ; 1 bytes @ 0x11
   217  000012                     	ds	1
   218  000013                     write_int_LCD@TenthDigit:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x12
   222  000013                     	ds	1
   223  000014                     write_int_LCD@HundrethDigit:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0x13
   227  000014                     	ds	1
   228  000015                     
   229                           ; 1 bytes @ 0x14
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 12 in file "main_8.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;		None
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : 0/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   249 ;;      Params:         0       0       0       0       0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0       0       0       0       0
   251 ;;      Temps:          0       0       0       0       0       0       0       0       0
   252 ;;      Totals:         0       0       0       0       0       0       0       0       0
   253 ;;Total ram usage:        0 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_LCD_init
   257 ;;		_measure
   258 ;;		_set_LCD_dir
   259 ;;		_set_cursor_pos
   260 ;;		_write_int_LCD
   261 ;;		_write_string_LCD
   262 ;; This function is called by:
   263 ;;		Startup code after reset
   264 ;; This function uses a non-reentrant model
   265 ;;
   266                           
   267                           	psect	text0
   268  0009EC                     __ptext0:
   269                           	callstack 0
   270  0009EC                     _main:
   271                           	callstack 29
   272  0009EC                     
   273                           ;main_8.c: 13:     OSCCON = 0x34;
   274  0009EC  0E34               	movlw	52
   275  0009EE  6ED3               	movwf	211,c	;volatile
   276  0009F0                     
   277                           ;main_8.c: 14:     TRISAbits.TRISA4 = 1;
   278  0009F0  8892               	bsf	146,4,c	;volatile
   279  0009F2                     
   280                           ;main_8.c: 15:     LCD_init();
   281  0009F2  EC20  F005         	call	_LCD_init	;wreg free
   282  0009F6                     
   283                           ;main_8.c: 16:     write_string_LCD("Frequency:");
   284  0009F6  0E01               	movlw	low STR_1
   285  0009F8  6E03               	movwf	write_string_LCD@s^0,c
   286  0009FA  0E08               	movlw	high STR_1
   287  0009FC  6E04               	movwf	(write_string_LCD@s+1)^0,c
   288  0009FE  EC87  F005         	call	_write_string_LCD	;wreg free
   289  000A02                     
   290                           ;main_8.c: 17:     set_cursor_pos(1,0);
   291  000A02  0E00               	movlw	0
   292  000A04  6E02               	movwf	set_cursor_pos@col^0,c
   293  000A06  0E01               	movlw	1
   294  000A08  ECCA  F004         	call	_set_cursor_pos
   295  000A0C                     
   296                           ;main_8.c: 18:     write_string_LCD("000 Hz");
   297  000A0C  0E0C               	movlw	low STR_2
   298  000A0E  6E03               	movwf	write_string_LCD@s^0,c
   299  000A10  0E08               	movlw	high STR_2
   300  000A12  6E04               	movwf	(write_string_LCD@s+1)^0,c
   301  000A14  EC87  F005         	call	_write_string_LCD	;wreg free
   302  000A18                     
   303                           ;main_8.c: 19:     set_LCD_dir('L');
   304  000A18  0E4C               	movlw	76
   305  000A1A  EC49  F005         	call	_set_LCD_dir
   306  000A1E                     l1103:
   307                           
   308                           ;main_8.c: 21:         set_cursor_pos(1,2);
   309  000A1E  0E02               	movlw	2
   310  000A20  6E02               	movwf	set_cursor_pos@col^0,c
   311  000A22  0E01               	movlw	1
   312  000A24  ECCA  F004         	call	_set_cursor_pos
   313  000A28                     
   314                           ;main_8.c: 22:         measure();
   315  000A28  EC69  F005         	call	_measure	;wreg free
   316  000A2C                     
   317                           ;main_8.c: 23:         write_int_LCD(count);
   318  000A2C  C015  F00F         	movff	_count,write_int_LCD@x
   319  000A30  C016  F010         	movff	_count+1,write_int_LCD@x+1
   320  000A34  EC6C  F004         	call	_write_int_LCD	;wreg free
   321  000A38  EF0F  F005         	goto	l1103
   322  000A3C  EF00  F000         	goto	start
   323  000A40                     __end_of_main:
   324                           	callstack 0
   325                           
   326 ;; *************** function _write_string_LCD *****************
   327 ;; Defined at:
   328 ;;		line 82 in file "../LCD_disp_Driver.c"
   329 ;; Parameters:    Size  Location     Type
   330 ;;  s               2    2[COMRAM] PTR const unsigned char 
   331 ;;		 -> STR_2(7), STR_1(11), 
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   343 ;;      Params:         2       0       0       0       0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0       0       0       0       0
   346 ;;      Totals:         2       0       0       0       0       0       0       0       0
   347 ;;Total ram usage:        2 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; Hardware stack levels required when called: 1
   350 ;; This function calls:
   351 ;;		_send_to_LCD
   352 ;; This function is called by:
   353 ;;		_main
   354 ;; This function uses a non-reentrant model
   355 ;;
   356                           
   357                           	psect	text1
   358  000B0E                     __ptext1:
   359                           	callstack 0
   360  000B0E                     _write_string_LCD:
   361                           	callstack 29
   362  000B0E                     
   363                           ;../LCD_disp_Driver.c: 83:     while(*s)
   364  000B0E  EF93  F005         	goto	l1071
   365  000B12                     l1067:
   366                           
   367                           ;../LCD_disp_Driver.c: 84:         send_to_LCD(*s++);
   368  000B12  C003  FFF6         	movff	write_string_LCD@s,tblptrl
   369  000B16  C004  FFF7         	movff	write_string_LCD@s+1,tblptrh
   370  000B1A                     	if	0	;tblptru may be non-zero
   371  000B1A                     	endif
   372  000B1A                     	if	0	;tblptru may be non-zero
   373  000B1A                     	endif
   374  000B1A  0008               	tblrd		*
   375  000B1C  50F5               	movf	tablat,w,c
   376  000B1E  ECB5  F005         	call	_send_to_LCD
   377  000B22  4A03               	infsnz	write_string_LCD@s^0,f,c
   378  000B24  2A04               	incf	(write_string_LCD@s+1)^0,f,c
   379  000B26                     l1071:
   380                           
   381                           ;../LCD_disp_Driver.c: 83:     while(*s)
   382  000B26  C003  FFF6         	movff	write_string_LCD@s,tblptrl
   383  000B2A  C004  FFF7         	movff	write_string_LCD@s+1,tblptrh
   384  000B2E                     	if	0	;tblptru may be non-zero
   385  000B2E                     	endif
   386  000B2E                     	if	0	;tblptru may be non-zero
   387  000B2E                     	endif
   388  000B2E  0008               	tblrd		*
   389  000B30  50F5               	movf	tablat,w,c
   390  000B32  0900               	iorlw	0
   391  000B34  A4D8               	btfss	status,2,c
   392  000B36  EF9F  F005         	goto	u231
   393  000B3A  EFA1  F005         	goto	u230
   394  000B3E                     u231:
   395  000B3E  EF89  F005         	goto	l1067
   396  000B42                     u230:
   397  000B42  0012               	return		;funcret
   398  000B44                     __end_of_write_string_LCD:
   399                           	callstack 0
   400                           
   401 ;; *************** function _write_int_LCD *****************
   402 ;; Defined at:
   403 ;;		line 87 in file "../LCD_disp_Driver.c"
   404 ;; Parameters:    Size  Location     Type
   405 ;;  x               2   14[COMRAM] int 
   406 ;; Auto vars:     Size  Location     Type
   407 ;;  HundrethDigi    1   19[COMRAM] unsigned char 
   408 ;;  TenthDigit      1   18[COMRAM] unsigned char 
   409 ;;  UnitDigit       1   17[COMRAM] unsigned char 
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   419 ;;      Params:         2       0       0       0       0       0       0       0       0
   420 ;;      Locals:         3       0       0       0       0       0       0       0       0
   421 ;;      Temps:          1       0       0       0       0       0       0       0       0
   422 ;;      Totals:         6       0       0       0       0       0       0       0       0
   423 ;;Total ram usage:        6 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 1
   426 ;; This function calls:
   427 ;;		___awdiv
   428 ;;		___wmul
   429 ;;		_send_to_LCD
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text2
   436  0008D8                     __ptext2:
   437                           	callstack 0
   438  0008D8                     _write_int_LCD:
   439                           	callstack 29
   440  0008D8                     
   441                           ;../LCD_disp_Driver.c: 89:     unsigned char TenthDigit = 0;
   442  0008D8  0E00               	movlw	0
   443  0008DA  6E13               	movwf	write_int_LCD@TenthDigit^0,c
   444                           
   445                           ;../LCD_disp_Driver.c: 90:     unsigned char HundrethDigit = 0;
   446  0008DC  0E00               	movlw	0
   447  0008DE  6E14               	movwf	write_int_LCD@HundrethDigit^0,c
   448  0008E0                     
   449                           ;../LCD_disp_Driver.c: 91:     HundrethDigit = x/100;
   450  0008E0  C00F  F007         	movff	write_int_LCD@x,___awdiv@dividend
   451  0008E4  C010  F008         	movff	write_int_LCD@x+1,___awdiv@dividend+1
   452  0008E8  0E00               	movlw	0
   453  0008EA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   454  0008EC  0E64               	movlw	100
   455  0008EE  6E09               	movwf	___awdiv@divisor^0,c
   456  0008F0  EC0A  F004         	call	___awdiv	;wreg free
   457  0008F4  5007               	movf	?___awdiv^0,w,c
   458  0008F6  6E14               	movwf	write_int_LCD@HundrethDigit^0,c
   459  0008F8                     
   460                           ;../LCD_disp_Driver.c: 92:     TenthDigit = (x - HundrethDigit*100)/10;
   461  0008F8  C014  F001         	movff	write_int_LCD@HundrethDigit,___wmul@multiplier
   462  0008FC  6A02               	clrf	(___wmul@multiplier+1)^0,c
   463  0008FE  0EFF               	movlw	255
   464  000900  6E04               	movwf	(___wmul@multiplicand+1)^0,c
   465  000902  0E9C               	movlw	156
   466  000904  6E03               	movwf	___wmul@multiplicand^0,c
   467  000906  ECA2  F005         	call	___wmul	;wreg free
   468  00090A  500F               	movf	write_int_LCD@x^0,w,c
   469  00090C  2401               	addwf	?___wmul^0,w,c
   470  00090E  6E07               	movwf	___awdiv@dividend^0,c
   471  000910  5010               	movf	(write_int_LCD@x+1)^0,w,c
   472  000912  2002               	addwfc	(?___wmul+1)^0,w,c
   473  000914  6E08               	movwf	(___awdiv@dividend+1)^0,c
   474  000916  0E00               	movlw	0
   475  000918  6E0A               	movwf	(___awdiv@divisor+1)^0,c
   476  00091A  0E0A               	movlw	10
   477  00091C  6E09               	movwf	___awdiv@divisor^0,c
   478  00091E  EC0A  F004         	call	___awdiv	;wreg free
   479  000922  5007               	movf	?___awdiv^0,w,c
   480  000924  6E13               	movwf	write_int_LCD@TenthDigit^0,c
   481  000926                     
   482                           ;../LCD_disp_Driver.c: 93:     UnitDigit = x - TenthDigit*10 - HundrethDigit*100;
   483  000926  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   484  000928  0D9C               	mullw	156
   485  00092A  CFF3 F011          	movff	prodl,??_write_int_LCD
   486  00092E  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   487  000930  0DF6               	mullw	246
   488  000932  50F3               	movf	243,w,c
   489  000934  2411               	addwf	??_write_int_LCD^0,w,c
   490  000936  240F               	addwf	write_int_LCD@x^0,w,c
   491  000938  6E12               	movwf	write_int_LCD@UnitDigit^0,c
   492  00093A                     
   493                           ;../LCD_disp_Driver.c: 94:     if(LCDdir == 'R'){
   494  00093A  0E52               	movlw	82
   495  00093C  1817               	xorwf	_LCDdir^0,w,c
   496  00093E  A4D8               	btfss	status,2,c
   497  000940  EFA4  F004         	goto	u241
   498  000944  EFA6  F004         	goto	u240
   499  000948                     u241:
   500  000948  EFB4  F004         	goto	l1085
   501  00094C                     u240:
   502  00094C                     
   503                           ;../LCD_disp_Driver.c: 95:         send_to_LCD(HundrethDigit+'0');
   504  00094C  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   505  00094E  0F30               	addlw	48
   506  000950  ECB5  F005         	call	_send_to_LCD
   507                           
   508                           ;../LCD_disp_Driver.c: 96:         send_to_LCD(TenthDigit+'0');
   509  000954  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   510  000956  0F30               	addlw	48
   511  000958  ECB5  F005         	call	_send_to_LCD
   512                           
   513                           ;../LCD_disp_Driver.c: 97:         send_to_LCD(UnitDigit+'0');
   514  00095C  5012               	movf	write_int_LCD@UnitDigit^0,w,c
   515  00095E  0F30               	addlw	48
   516  000960  ECB5  F005         	call	_send_to_LCD
   517                           
   518                           ;../LCD_disp_Driver.c: 98:     } else if(LCDdir == 'L'){
   519  000964  EFC9  F004         	goto	l65
   520  000968                     l1085:
   521  000968  0E4C               	movlw	76
   522  00096A  1817               	xorwf	_LCDdir^0,w,c
   523  00096C  A4D8               	btfss	status,2,c
   524  00096E  EFBB  F004         	goto	u251
   525  000972  EFBD  F004         	goto	u250
   526  000976                     u251:
   527  000976  EFC9  F004         	goto	l65
   528  00097A                     u250:
   529  00097A                     
   530                           ;../LCD_disp_Driver.c: 99:         send_to_LCD(UnitDigit+'0');
   531  00097A  5012               	movf	write_int_LCD@UnitDigit^0,w,c
   532  00097C  0F30               	addlw	48
   533  00097E  ECB5  F005         	call	_send_to_LCD
   534                           
   535                           ;../LCD_disp_Driver.c: 100:         send_to_LCD(TenthDigit+'0');
   536  000982  5013               	movf	write_int_LCD@TenthDigit^0,w,c
   537  000984  0F30               	addlw	48
   538  000986  ECB5  F005         	call	_send_to_LCD
   539                           
   540                           ;../LCD_disp_Driver.c: 101:         send_to_LCD(HundrethDigit+'0');
   541  00098A  5014               	movf	write_int_LCD@HundrethDigit^0,w,c
   542  00098C  0F30               	addlw	48
   543  00098E  ECB5  F005         	call	_send_to_LCD
   544  000992                     l65:
   545  000992  0012               	return		;funcret
   546  000994                     __end_of_write_int_LCD:
   547                           	callstack 0
   548                           
   549 ;; *************** function _send_to_LCD *****************
   550 ;; Defined at:
   551 ;;		line 44 in file "../LCD_disp_Driver.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;  xy              1    wreg     unsigned char 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  xy              1    1[COMRAM] unsigned char 
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg, status,2, cstack
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   565 ;;      Params:         0       0       0       0       0       0       0       0       0
   566 ;;      Locals:         1       0       0       0       0       0       0       0       0
   567 ;;      Temps:          1       0       0       0       0       0       0       0       0
   568 ;;      Totals:         2       0       0       0       0       0       0       0       0
   569 ;;Total ram usage:        2 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_write_string_LCD
   575 ;;		_write_int_LCD
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           	psect	text3
   580  000B6A                     __ptext3:
   581                           	callstack 0
   582  000B6A                     _send_to_LCD:
   583                           	callstack 29
   584                           
   585                           ;incstack = 0
   586                           ;send_to_LCD@xy stored from wreg
   587  000B6A  6E02               	movwf	send_to_LCD@xy^0,c
   588  000B6C                     
   589                           ;../LCD_disp_Driver.c: 45:     LATCbits.LATC2 = 1;
   590  000B6C  848B               	bsf	139,2,c	;volatile
   591                           
   592                           ;../LCD_disp_Driver.c: 46:     LATCbits.LATC1 = 0;
   593  000B6E  928B               	bcf	139,1,c	;volatile
   594                           
   595                           ;../LCD_disp_Driver.c: 47:     LATCbits.LATC0 = 1;
   596  000B70  808B               	bsf	139,0,c	;volatile
   597  000B72                     
   598                           ;../LCD_disp_Driver.c: 48:     LATD = xy;
   599  000B72  C002  FF8C         	movff	send_to_LCD@xy,3980	;volatile
   600  000B76                     
   601                           ;../LCD_disp_Driver.c: 49:     __nop();
   602  000B76  F000               	nop	
   603  000B78                     
   604                           ;../LCD_disp_Driver.c: 50:     __nop();
   605  000B78  F000               	nop	
   606  000B7A                     
   607                           ;../LCD_disp_Driver.c: 51:     LATCbits.LATC0 = 0;
   608  000B7A  908B               	bcf	139,0,c	;volatile
   609  000B7C                     
   610                           ;../LCD_disp_Driver.c: 52:     _delay((unsigned long)((250)*(1000000/4000.0)));
   611  000B7C  0E52               	movlw	82
   612  000B7E  6E01               	movwf	??_send_to_LCD^0,c
   613  000B80  0E2A               	movlw	42
   614  000B82                     u267:
   615  000B82  2EE8               	decfsz	wreg,f,c
   616  000B84  D7FE               	bra	u267
   617  000B86  2E01               	decfsz	??_send_to_LCD^0,f,c
   618  000B88  D7FC               	bra	u267
   619  000B8A  0012               	return		;funcret
   620  000B8C                     __end_of_send_to_LCD:
   621                           	callstack 0
   622                           
   623 ;; *************** function ___wmul *****************
   624 ;; Defined at:
   625 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\Umul16.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  multiplier      2    0[COMRAM] unsigned int 
   628 ;;  multiplicand    2    2[COMRAM] unsigned int 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  product         2    4[COMRAM] unsigned int 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  2    0[COMRAM] unsigned int 
   633 ;; Registers used:
   634 ;;		wreg, status,2, status,0, prodl, prodh
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   640 ;;      Params:         4       0       0       0       0       0       0       0       0
   641 ;;      Locals:         2       0       0       0       0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0
   643 ;;      Totals:         6       0       0       0       0       0       0       0       0
   644 ;;Total ram usage:        6 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_write_int_LCD
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653                           	psect	text4
   654  000B44                     __ptext4:
   655                           	callstack 0
   656  000B44                     ___wmul:
   657                           	callstack 29
   658  000B44  5001               	movf	___wmul@multiplier^0,w,c
   659  000B46  0203               	mulwf	___wmul@multiplicand^0,c
   660  000B48  CFF3 F005          	movff	prodl,___wmul@product
   661  000B4C  CFF4 F006          	movff	prodh,___wmul@product+1
   662  000B50  5001               	movf	___wmul@multiplier^0,w,c
   663  000B52  0204               	mulwf	(___wmul@multiplicand+1)^0,c
   664  000B54  50F3               	movf	243,w,c
   665  000B56  2606               	addwf	(___wmul@product+1)^0,f,c
   666  000B58  5002               	movf	(___wmul@multiplier+1)^0,w,c
   667  000B5A  0203               	mulwf	___wmul@multiplicand^0,c
   668  000B5C  50F3               	movf	243,w,c
   669  000B5E  2606               	addwf	(___wmul@product+1)^0,f,c
   670  000B60  C005  F001         	movff	___wmul@product,?___wmul
   671  000B64  C006  F002         	movff	___wmul@product+1,?___wmul+1
   672  000B68  0012               	return		;funcret
   673  000B6A                     __end_of___wmul:
   674                           	callstack 0
   675                           
   676 ;; *************** function ___awdiv *****************
   677 ;; Defined at:
   678 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c99\common\awdiv.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;  dividend        2    6[COMRAM] int 
   681 ;;  divisor         2    8[COMRAM] int 
   682 ;; Auto vars:     Size  Location     Type
   683 ;;  quotient        2   12[COMRAM] int 
   684 ;;  sign            1   11[COMRAM] unsigned char 
   685 ;;  counter         1   10[COMRAM] unsigned char 
   686 ;; Return value:  Size  Location     Type
   687 ;;                  2    6[COMRAM] int 
   688 ;; Registers used:
   689 ;;		wreg, status,2, status,0
   690 ;; Tracked objects:
   691 ;;		On entry : 0/0
   692 ;;		On exit  : 0/0
   693 ;;		Unchanged: 0/0
   694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   695 ;;      Params:         4       0       0       0       0       0       0       0       0
   696 ;;      Locals:         4       0       0       0       0       0       0       0       0
   697 ;;      Temps:          0       0       0       0       0       0       0       0       0
   698 ;;      Totals:         8       0       0       0       0       0       0       0       0
   699 ;;Total ram usage:        8 bytes
   700 ;; Hardware stack levels used: 1
   701 ;; This function calls:
   702 ;;		Nothing
   703 ;; This function is called by:
   704 ;;		_write_int_LCD
   705 ;; This function uses a non-reentrant model
   706 ;;
   707                           
   708                           	psect	text5
   709  000814                     __ptext5:
   710                           	callstack 0
   711  000814                     ___awdiv:
   712                           	callstack 29
   713  000814  0E00               	movlw	0
   714  000816  6E0C               	movwf	___awdiv@sign^0,c
   715  000818  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
   716  00081A  EF13  F004         	goto	u170
   717  00081E  EF11  F004         	goto	u171
   718  000822                     u171:
   719  000822  EF19  F004         	goto	l1011
   720  000826                     u170:
   721  000826  6C09               	negf	___awdiv@divisor^0,c
   722  000828  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
   723  00082A  B0D8               	btfsc	status,0,c
   724  00082C  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
   725  00082E  0E01               	movlw	1
   726  000830  6E0C               	movwf	___awdiv@sign^0,c
   727  000832                     l1011:
   728  000832  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
   729  000834  EF20  F004         	goto	u180
   730  000838  EF1E  F004         	goto	u181
   731  00083C                     u181:
   732  00083C  EF26  F004         	goto	l1017
   733  000840                     u180:
   734  000840  6C07               	negf	___awdiv@dividend^0,c
   735  000842  1E08               	comf	(___awdiv@dividend+1)^0,f,c
   736  000844  B0D8               	btfsc	status,0,c
   737  000846  2A08               	incf	(___awdiv@dividend+1)^0,f,c
   738  000848  0E01               	movlw	1
   739  00084A  1A0C               	xorwf	___awdiv@sign^0,f,c
   740  00084C                     l1017:
   741  00084C  0E00               	movlw	0
   742  00084E  6E0E               	movwf	(___awdiv@quotient+1)^0,c
   743  000850  0E00               	movlw	0
   744  000852  6E0D               	movwf	___awdiv@quotient^0,c
   745  000854  5009               	movf	___awdiv@divisor^0,w,c
   746  000856  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
   747  000858  B4D8               	btfsc	status,2,c
   748  00085A  EF31  F004         	goto	u191
   749  00085E  EF33  F004         	goto	u190
   750  000862                     u191:
   751  000862  EF5B  F004         	goto	l1039
   752  000866                     u190:
   753  000866  0E01               	movlw	1
   754  000868  6E0B               	movwf	___awdiv@counter^0,c
   755  00086A  EF3B  F004         	goto	l1025
   756  00086E                     l1023:
   757  00086E  90D8               	bcf	status,0,c
   758  000870  3609               	rlcf	___awdiv@divisor^0,f,c
   759  000872  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
   760  000874  2A0B               	incf	___awdiv@counter^0,f,c
   761  000876                     l1025:
   762  000876  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
   763  000878  EF40  F004         	goto	u201
   764  00087C  EF42  F004         	goto	u200
   765  000880                     u201:
   766  000880  EF37  F004         	goto	l1023
   767  000884                     u200:
   768  000884                     l1027:
   769  000884  90D8               	bcf	status,0,c
   770  000886  360D               	rlcf	___awdiv@quotient^0,f,c
   771  000888  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
   772  00088A  5009               	movf	___awdiv@divisor^0,w,c
   773  00088C  5C07               	subwf	___awdiv@dividend^0,w,c
   774  00088E  500A               	movf	(___awdiv@divisor+1)^0,w,c
   775  000890  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
   776  000892  A0D8               	btfss	status,0,c
   777  000894  EF4E  F004         	goto	u211
   778  000898  EF50  F004         	goto	u210
   779  00089C                     u211:
   780  00089C  EF55  F004         	goto	l1035
   781  0008A0                     u210:
   782  0008A0  5009               	movf	___awdiv@divisor^0,w,c
   783  0008A2  5E07               	subwf	___awdiv@dividend^0,f,c
   784  0008A4  500A               	movf	(___awdiv@divisor+1)^0,w,c
   785  0008A6  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
   786  0008A8  800D               	bsf	___awdiv@quotient^0,0,c
   787  0008AA                     l1035:
   788  0008AA  90D8               	bcf	status,0,c
   789  0008AC  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
   790  0008AE  3209               	rrcf	___awdiv@divisor^0,f,c
   791  0008B0  2E0B               	decfsz	___awdiv@counter^0,f,c
   792  0008B2  EF42  F004         	goto	l1027
   793  0008B6                     l1039:
   794  0008B6  500C               	movf	___awdiv@sign^0,w,c
   795  0008B8  B4D8               	btfsc	status,2,c
   796  0008BA  EF61  F004         	goto	u221
   797  0008BE  EF63  F004         	goto	u220
   798  0008C2                     u221:
   799  0008C2  EF67  F004         	goto	l1043
   800  0008C6                     u220:
   801  0008C6  6C0D               	negf	___awdiv@quotient^0,c
   802  0008C8  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
   803  0008CA  B0D8               	btfsc	status,0,c
   804  0008CC  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
   805  0008CE                     l1043:
   806  0008CE  C00D  F007         	movff	___awdiv@quotient,?___awdiv
   807  0008D2  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
   808  0008D6  0012               	return		;funcret
   809  0008D8                     __end_of___awdiv:
   810                           	callstack 0
   811                           
   812 ;; *************** function _set_cursor_pos *****************
   813 ;; Defined at:
   814 ;;		line 55 in file "../LCD_disp_Driver.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  row             1    wreg     unsigned char 
   817 ;;  col             1    1[COMRAM] unsigned char 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  row             1    4[COMRAM] unsigned char 
   820 ;;  Pos             1    5[COMRAM] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         1       0       0       0       0       0       0       0       0
   831 ;;      Locals:         2       0       0       0       0       0       0       0       0
   832 ;;      Temps:          2       0       0       0       0       0       0       0       0
   833 ;;      Totals:         5       0       0       0       0       0       0       0       0
   834 ;;Total ram usage:        5 bytes
   835 ;; Hardware stack levels used: 1
   836 ;; Hardware stack levels required when called: 1
   837 ;; This function calls:
   838 ;;		_LCD_cmd
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           	psect	text6
   845  000994                     __ptext6:
   846                           	callstack 0
   847  000994                     _set_cursor_pos:
   848                           	callstack 29
   849                           
   850                           ;incstack = 0
   851                           ;set_cursor_pos@row stored from wreg
   852  000994  6E05               	movwf	set_cursor_pos@row^0,c
   853  000996                     
   854                           ;../LCD_disp_Driver.c: 57:     switch (row){
   855  000996  EFE0  F004         	goto	l1059
   856  00099A                     l1049:
   857                           
   858                           ;../LCD_disp_Driver.c: 59:             Pos = 0x80|col;
   859  00099A  5002               	movf	set_cursor_pos@col^0,w,c
   860  00099C  0980               	iorlw	128
   861  00099E  6E06               	movwf	set_cursor_pos@Pos^0,c
   862  0009A0                     
   863                           ;../LCD_disp_Driver.c: 60:             LCD_cmd(Pos);
   864  0009A0  5006               	movf	set_cursor_pos@Pos^0,w,c
   865  0009A2  ECC6  F005         	call	_LCD_cmd
   866                           
   867                           ;../LCD_disp_Driver.c: 61:         } break;
   868  0009A6  EFF5  F004         	goto	l41
   869  0009AA                     l1053:
   870                           
   871                           ;../LCD_disp_Driver.c: 63:             Pos = 0xC0|col;
   872  0009AA  5002               	movf	set_cursor_pos@col^0,w,c
   873  0009AC  09C0               	iorlw	192
   874  0009AE  6E06               	movwf	set_cursor_pos@Pos^0,c
   875  0009B0                     
   876                           ;../LCD_disp_Driver.c: 64:             LCD_cmd(Pos);
   877  0009B0  5006               	movf	set_cursor_pos@Pos^0,w,c
   878  0009B2  ECC6  F005         	call	_LCD_cmd
   879                           
   880                           ;../LCD_disp_Driver.c: 65:         } break;
   881  0009B6  EFF5  F004         	goto	l41
   882  0009BA                     l40:
   883  0009BA  F000               	nop	
   884  0009BC  EFF5  F004         	goto	l41
   885  0009C0                     l1059:
   886  0009C0  5005               	movf	set_cursor_pos@row^0,w,c
   887  0009C2  6E03               	movwf	??_set_cursor_pos^0,c
   888  0009C4  6A04               	clrf	(??_set_cursor_pos+1)^0,c
   889                           
   890                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   891                           ; Switch size 1, requested type "simple"
   892                           ; Number of cases is 1, Range of values is 0 to 0
   893                           ; switch strategies available:
   894                           ; Name         Instructions Cycles
   895                           ; simple_byte            4     3 (average)
   896                           ;	Chosen strategy is simple_byte
   897  0009C6  5004               	movf	(??_set_cursor_pos+1)^0,w,c
   898  0009C8  0A00               	xorlw	0	; case 0
   899  0009CA  B4D8               	btfsc	status,2,c
   900  0009CC  EFEA  F004         	goto	l1113
   901  0009D0  EFDD  F004         	goto	l40
   902  0009D4                     l1113:
   903                           
   904                           ; Switch size 1, requested type "simple"
   905                           ; Number of cases is 2, Range of values is 0 to 1
   906                           ; switch strategies available:
   907                           ; Name         Instructions Cycles
   908                           ; simple_byte            7     4 (average)
   909                           ;	Chosen strategy is simple_byte
   910  0009D4  5003               	movf	??_set_cursor_pos^0,w,c
   911  0009D6  0A00               	xorlw	0	; case 0
   912  0009D8  B4D8               	btfsc	status,2,c
   913  0009DA  EFCD  F004         	goto	l1049
   914  0009DE  0A01               	xorlw	1	; case 1
   915  0009E0  B4D8               	btfsc	status,2,c
   916  0009E2  EFD5  F004         	goto	l1053
   917  0009E6  EFDD  F004         	goto	l40
   918  0009EA                     l41:
   919  0009EA  0012               	return		;funcret
   920  0009EC                     __end_of_set_cursor_pos:
   921                           	callstack 0
   922                           
   923 ;; *************** function _set_LCD_dir *****************
   924 ;; Defined at:
   925 ;;		line 34 in file "../LCD_disp_Driver.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  d               1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  d               1    1[COMRAM] unsigned char 
   930 ;; Return value:  Size  Location     Type
   931 ;;                  1    wreg      void 
   932 ;; Registers used:
   933 ;;		wreg, status,2, status,0, cstack
   934 ;; Tracked objects:
   935 ;;		On entry : 0/0
   936 ;;		On exit  : 0/0
   937 ;;		Unchanged: 0/0
   938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   939 ;;      Params:         0       0       0       0       0       0       0       0       0
   940 ;;      Locals:         1       0       0       0       0       0       0       0       0
   941 ;;      Temps:          0       0       0       0       0       0       0       0       0
   942 ;;      Totals:         1       0       0       0       0       0       0       0       0
   943 ;;Total ram usage:        1 bytes
   944 ;; Hardware stack levels used: 1
   945 ;; Hardware stack levels required when called: 1
   946 ;; This function calls:
   947 ;;		_LCD_cmd
   948 ;; This function is called by:
   949 ;;		_main
   950 ;; This function uses a non-reentrant model
   951 ;;
   952                           
   953                           	psect	text7
   954  000A92                     __ptext7:
   955                           	callstack 0
   956  000A92                     _set_LCD_dir:
   957                           	callstack 29
   958                           
   959                           ;incstack = 0
   960                           ;set_LCD_dir@d stored from wreg
   961  000A92  6E02               	movwf	set_LCD_dir@d^0,c
   962  000A94                     
   963                           ;../LCD_disp_Driver.c: 35:     if(d == 'L'){
   964  000A94  0E4C               	movlw	76
   965  000A96  1802               	xorwf	set_LCD_dir@d^0,w,c
   966  000A98  A4D8               	btfss	status,2,c
   967  000A9A  EF51  F005         	goto	u71
   968  000A9E  EF53  F005         	goto	u70
   969  000AA2                     u71:
   970  000AA2  EF5A  F005         	goto	l891
   971  000AA6                     u70:
   972  000AA6                     
   973                           ;../LCD_disp_Driver.c: 36:         LCD_cmd(0b00000100);
   974  000AA6  0E04               	movlw	4
   975  000AA8  ECC6  F005         	call	_LCD_cmd
   976  000AAC                     
   977                           ;../LCD_disp_Driver.c: 37:         LCDdir = 'L';
   978  000AAC  0E4C               	movlw	76
   979  000AAE  6E17               	movwf	_LCDdir^0,c
   980                           
   981                           ;../LCD_disp_Driver.c: 38:     } else if (d == 'R'){
   982  000AB0  EF68  F005         	goto	l30
   983  000AB4                     l891:
   984  000AB4  0E52               	movlw	82
   985  000AB6  1802               	xorwf	set_LCD_dir@d^0,w,c
   986  000AB8  A4D8               	btfss	status,2,c
   987  000ABA  EF61  F005         	goto	u81
   988  000ABE  EF63  F005         	goto	u80
   989  000AC2                     u81:
   990  000AC2  EF68  F005         	goto	l30
   991  000AC6                     u80:
   992  000AC6                     
   993                           ;../LCD_disp_Driver.c: 39:         LCD_cmd(0b00000110);
   994  000AC6  0E06               	movlw	6
   995  000AC8  ECC6  F005         	call	_LCD_cmd
   996  000ACC                     
   997                           ;../LCD_disp_Driver.c: 40:         LCDdir = 'R';
   998  000ACC  0E52               	movlw	82
   999  000ACE  6E17               	movwf	_LCDdir^0,c
  1000  000AD0                     l30:
  1001  000AD0  0012               	return		;funcret
  1002  000AD2                     __end_of_set_LCD_dir:
  1003                           	callstack 0
  1004                           
  1005 ;; *************** function _measure *****************
  1006 ;; Defined at:
  1007 ;;		line 28 in file "main_8.c"
  1008 ;; Parameters:    Size  Location     Type
  1009 ;;		None
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;		None
  1012 ;; Return value:  Size  Location     Type
  1013 ;;                  1    wreg      void 
  1014 ;; Registers used:
  1015 ;;		wreg, status,2
  1016 ;; Tracked objects:
  1017 ;;		On entry : 0/0
  1018 ;;		On exit  : 0/0
  1019 ;;		Unchanged: 0/0
  1020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1021 ;;      Params:         0       0       0       0       0       0       0       0       0
  1022 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1023 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1024 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1025 ;;Total ram usage:        0 bytes
  1026 ;; Hardware stack levels used: 1
  1027 ;; This function calls:
  1028 ;;		Nothing
  1029 ;; This function is called by:
  1030 ;;		_main
  1031 ;; This function uses a non-reentrant model
  1032 ;;
  1033                           
  1034                           	psect	text8
  1035  000AD2                     __ptext8:
  1036                           	callstack 0
  1037  000AD2                     _measure:
  1038                           	callstack 30
  1039  000AD2                     
  1040                           ;main_8.c: 30:     TMR1L = 0xEE;
  1041  000AD2  0EEE               	movlw	238
  1042  000AD4  6ECE               	movwf	206,c	;volatile
  1043                           
  1044                           ;main_8.c: 31:     TMR1H = 0x85;
  1045  000AD6  0E85               	movlw	133
  1046  000AD8  6ECF               	movwf	207,c	;volatile
  1047  000ADA                     
  1048                           ;main_8.c: 32:     T1GCONbits.TMR1GE = 0;
  1049  000ADA  9ECC               	bcf	204,7,c	;volatile
  1050  000ADC                     
  1051                           ;main_8.c: 33:     PIR1bits.TMR1IF = 0;
  1052  000ADC  909E               	bcf	158,0,c	;volatile
  1053                           
  1054                           ;main_8.c: 35:     T1CON = 0b00110001;
  1055  000ADE  0E31               	movlw	49
  1056  000AE0  6ECD               	movwf	205,c	;volatile
  1057                           
  1058                           ;main_8.c: 36:     while(PIR1bits.TMR1IF == 0){
  1059  000AE2  EF75  F005         	goto	l947
  1060  000AE6                     l945:
  1061                           
  1062                           ;main_8.c: 39:         T0CON = 0b11111000;
  1063  000AE6  0EF8               	movlw	248
  1064  000AE8  6ED5               	movwf	213,c	;volatile
  1065  000AEA                     l947:
  1066                           
  1067                           ;main_8.c: 36:     while(PIR1bits.TMR1IF == 0){
  1068  000AEA  A09E               	btfss	158,0,c	;volatile
  1069  000AEC  EF7A  F005         	goto	u121
  1070  000AF0  EF7C  F005         	goto	u120
  1071  000AF4                     u121:
  1072  000AF4  EF73  F005         	goto	l945
  1073  000AF8                     u120:
  1074  000AF8                     
  1075                           ;main_8.c: 41:     count = TMR0L;
  1076  000AF8  CFD6 F015          	movff	4054,_count	;volatile
  1077  000AFC  6A16               	clrf	(_count+1)^0,c
  1078  000AFE                     
  1079                           ;main_8.c: 42:     TMR0L = 0;
  1080  000AFE  0E00               	movlw	0
  1081  000B00  6ED6               	movwf	214,c	;volatile
  1082                           
  1083                           ;main_8.c: 43:     T1CON = 0;
  1084  000B02  0E00               	movlw	0
  1085  000B04  6ECD               	movwf	205,c	;volatile
  1086                           
  1087                           ;main_8.c: 44:     T0CON = 0;
  1088  000B06  0E00               	movlw	0
  1089  000B08  6ED5               	movwf	213,c	;volatile
  1090  000B0A                     
  1091                           ;main_8.c: 45:     PIR1bits.TMR1IF = 0;
  1092  000B0A  909E               	bcf	158,0,c	;volatile
  1093  000B0C  0012               	return		;funcret
  1094  000B0E                     __end_of_measure:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _LCD_init *****************
  1098 ;; Defined at:
  1099 ;;		line 7 in file "../LCD_disp_Driver.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;		None
  1104 ;; Return value:  Size  Location     Type
  1105 ;;                  1    wreg      void 
  1106 ;; Registers used:
  1107 ;;		wreg, status,2, cstack
  1108 ;; Tracked objects:
  1109 ;;		On entry : 0/0
  1110 ;;		On exit  : 0/0
  1111 ;;		Unchanged: 0/0
  1112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1113 ;;      Params:         0       0       0       0       0       0       0       0       0
  1114 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1115 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1116 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1117 ;;Total ram usage:        1 bytes
  1118 ;; Hardware stack levels used: 1
  1119 ;; Hardware stack levels required when called: 1
  1120 ;; This function calls:
  1121 ;;		_LCD_cmd
  1122 ;; This function is called by:
  1123 ;;		_main
  1124 ;; This function uses a non-reentrant model
  1125 ;;
  1126                           
  1127                           	psect	text9
  1128  000A40                     __ptext9:
  1129                           	callstack 0
  1130  000A40                     _LCD_init:
  1131                           	callstack 29
  1132  000A40                     
  1133                           ;../LCD_disp_Driver.c: 8:     TRISD = 0x00;
  1134  000A40  0E00               	movlw	0
  1135  000A42  6E95               	movwf	149,c	;volatile
  1136  000A44                     
  1137                           ;../LCD_disp_Driver.c: 9:     LATCbits.LATC2 = 0;
  1138  000A44  948B               	bcf	139,2,c	;volatile
  1139  000A46                     
  1140                           ;../LCD_disp_Driver.c: 10:     LATCbits.LATC1 = 0;
  1141  000A46  928B               	bcf	139,1,c	;volatile
  1142  000A48                     
  1143                           ;../LCD_disp_Driver.c: 11:     LATCbits.LATC0 = 0;
  1144  000A48  908B               	bcf	139,0,c	;volatile
  1145                           
  1146                           ;../LCD_disp_Driver.c: 12:     LATC = 0;
  1147  000A4A  0E00               	movlw	0
  1148  000A4C  6E8B               	movwf	139,c	;volatile
  1149  000A4E                     
  1150                           ;../LCD_disp_Driver.c: 13:     TRISCbits.TRISC0 = 0;
  1151  000A4E  9094               	bcf	148,0,c	;volatile
  1152  000A50                     
  1153                           ;../LCD_disp_Driver.c: 14:     TRISCbits.TRISC2 = 0;
  1154  000A50  9494               	bcf	148,2,c	;volatile
  1155  000A52                     
  1156                           ;../LCD_disp_Driver.c: 15:     TRISCbits.TRISC1 = 0;
  1157  000A52  9294               	bcf	148,1,c	;volatile
  1158  000A54                     
  1159                           ;../LCD_disp_Driver.c: 16:     LCD_cmd(0b00111000);
  1160  000A54  0E38               	movlw	56
  1161  000A56  ECC6  F005         	call	_LCD_cmd
  1162  000A5A                     
  1163                           ;../LCD_disp_Driver.c: 17:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1164  000A5A  0E52               	movlw	82
  1165  000A5C  6E02               	movwf	??_LCD_init^0,c
  1166  000A5E  0E2A               	movlw	42
  1167  000A60                     u277:
  1168  000A60  2EE8               	decfsz	wreg,f,c
  1169  000A62  D7FE               	bra	u277
  1170  000A64  2E02               	decfsz	??_LCD_init^0,f,c
  1171  000A66  D7FC               	bra	u277
  1172  000A68                     
  1173                           ;../LCD_disp_Driver.c: 18:     LCD_cmd(0b00001110);
  1174  000A68  0E0E               	movlw	14
  1175  000A6A  ECC6  F005         	call	_LCD_cmd
  1176  000A6E                     
  1177                           ;../LCD_disp_Driver.c: 19:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1178  000A6E  0E52               	movlw	82
  1179  000A70  6E02               	movwf	??_LCD_init^0,c
  1180  000A72  0E2A               	movlw	42
  1181  000A74                     u287:
  1182  000A74  2EE8               	decfsz	wreg,f,c
  1183  000A76  D7FE               	bra	u287
  1184  000A78  2E02               	decfsz	??_LCD_init^0,f,c
  1185  000A7A  D7FC               	bra	u287
  1186  000A7C                     
  1187                           ;../LCD_disp_Driver.c: 20:     LCD_cmd(0b00000001);
  1188  000A7C  0E01               	movlw	1
  1189  000A7E  ECC6  F005         	call	_LCD_cmd
  1190  000A82                     
  1191                           ;../LCD_disp_Driver.c: 21:     _delay((unsigned long)((250)*(1000000/4000.0)));
  1192  000A82  0E52               	movlw	82
  1193  000A84  6E02               	movwf	??_LCD_init^0,c
  1194  000A86  0E2A               	movlw	42
  1195  000A88                     u297:
  1196  000A88  2EE8               	decfsz	wreg,f,c
  1197  000A8A  D7FE               	bra	u297
  1198  000A8C  2E02               	decfsz	??_LCD_init^0,f,c
  1199  000A8E  D7FC               	bra	u297
  1200  000A90  0012               	return		;funcret
  1201  000A92                     __end_of_LCD_init:
  1202                           	callstack 0
  1203                           
  1204 ;; *************** function _LCD_cmd *****************
  1205 ;; Defined at:
  1206 ;;		line 24 in file "../LCD_disp_Driver.c"
  1207 ;; Parameters:    Size  Location     Type
  1208 ;;  cx              1    wreg     unsigned char 
  1209 ;; Auto vars:     Size  Location     Type
  1210 ;;  cx              1    0[COMRAM] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1220 ;;      Params:         0       0       0       0       0       0       0       0       0
  1221 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1222 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1223 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1224 ;;Total ram usage:        1 bytes
  1225 ;; Hardware stack levels used: 1
  1226 ;; This function calls:
  1227 ;;		Nothing
  1228 ;; This function is called by:
  1229 ;;		_LCD_init
  1230 ;;		_set_LCD_dir
  1231 ;;		_set_cursor_pos
  1232 ;;		_move_cursor_n_times
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           	psect	text10
  1237  000B8C                     __ptext10:
  1238                           	callstack 0
  1239  000B8C                     _LCD_cmd:
  1240                           	callstack 29
  1241                           
  1242                           ;incstack = 0
  1243                           ;LCD_cmd@cx stored from wreg
  1244  000B8C  6E01               	movwf	LCD_cmd@cx^0,c
  1245  000B8E                     
  1246                           ;../LCD_disp_Driver.c: 25:     LATCbits.LATC2 = 0;
  1247  000B8E  948B               	bcf	139,2,c	;volatile
  1248                           
  1249                           ;../LCD_disp_Driver.c: 26:     LATCbits.LATC1 = 0;
  1250  000B90  928B               	bcf	139,1,c	;volatile
  1251                           
  1252                           ;../LCD_disp_Driver.c: 27:     LATCbits.LATC0 = 1;
  1253  000B92  808B               	bsf	139,0,c	;volatile
  1254                           
  1255                           ;../LCD_disp_Driver.c: 28:     __nop();
  1256  000B94  F000               	nop	
  1257  000B96                     
  1258                           ;../LCD_disp_Driver.c: 29:     LATD = cx;
  1259  000B96  C001  FF8C         	movff	LCD_cmd@cx,3980	;volatile
  1260  000B9A                     
  1261                           ;../LCD_disp_Driver.c: 30:     __nop();
  1262  000B9A  F000               	nop	
  1263  000B9C                     
  1264                           ;../LCD_disp_Driver.c: 31:     LATCbits.LATC0 = 0;
  1265  000B9C  908B               	bcf	139,0,c	;volatile
  1266  000B9E  0012               	return		;funcret
  1267  000BA0                     __end_of_LCD_cmd:
  1268                           	callstack 0
  1269                           
  1270                           	psect	rparam
  1271  0000                     
  1272                           	psect	idloc
  1273                           
  1274                           ;Config register IDLOC0 @ 0x200000
  1275                           ;	unspecified, using default values
  1276  200000                     	org	2097152
  1277  200000  FF                 	db	255
  1278                           
  1279                           ;Config register IDLOC1 @ 0x200001
  1280                           ;	unspecified, using default values
  1281  200001                     	org	2097153
  1282  200001  FF                 	db	255
  1283                           
  1284                           ;Config register IDLOC2 @ 0x200002
  1285                           ;	unspecified, using default values
  1286  200002                     	org	2097154
  1287  200002  FF                 	db	255
  1288                           
  1289                           ;Config register IDLOC3 @ 0x200003
  1290                           ;	unspecified, using default values
  1291  200003                     	org	2097155
  1292  200003  FF                 	db	255
  1293                           
  1294                           ;Config register IDLOC4 @ 0x200004
  1295                           ;	unspecified, using default values
  1296  200004                     	org	2097156
  1297  200004  FF                 	db	255
  1298                           
  1299                           ;Config register IDLOC5 @ 0x200005
  1300                           ;	unspecified, using default values
  1301  200005                     	org	2097157
  1302  200005  FF                 	db	255
  1303                           
  1304                           ;Config register IDLOC6 @ 0x200006
  1305                           ;	unspecified, using default values
  1306  200006                     	org	2097158
  1307  200006  FF                 	db	255
  1308                           
  1309                           ;Config register IDLOC7 @ 0x200007
  1310                           ;	unspecified, using default values
  1311  200007                     	org	2097159
  1312  200007  FF                 	db	255
  1313                           
  1314                           	psect	config
  1315                           
  1316                           ;Config register CONFIG1L @ 0x300000
  1317                           ;	PLL Selection
  1318                           ;	PLLSEL = PLL4X, 4x clock multiplier
  1319                           ;	PLL Enable Configuration bit
  1320                           ;	CFGPLLEN = OFF, PLL Disabled (firmware controlled)
  1321                           ;	CPU System Clock Postscaler
  1322                           ;	CPUDIV = NOCLKDIV, CPU uses system clock (no divide)
  1323                           ;	Low Speed USB mode with 48 MHz system clock
  1324                           ;	LS48MHZ = SYS24X4, System clock at 24 MHz, USB clock divider is set to 4
  1325  300000                     	org	3145728
  1326  300000  00                 	db	0
  1327                           
  1328                           ;Config register CONFIG1H @ 0x300001
  1329                           ;	Oscillator Selection
  1330                           ;	FOSC = INTOSCIO, Internal oscillator
  1331                           ;	Primary Oscillator Shutdown
  1332                           ;	PCLKEN = ON, Primary oscillator enabled
  1333                           ;	Fail-Safe Clock Monitor
  1334                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  1335                           ;	Internal/External Oscillator Switchover
  1336                           ;	IESO = OFF, Oscillator Switchover mode disabled
  1337  300001                     	org	3145729
  1338  300001  28                 	db	40
  1339                           
  1340                           ;Config register CONFIG2L @ 0x300002
  1341                           ;	Power-up Timer Enable
  1342                           ;	nPWRTEN = OFF, Power up timer disabled
  1343                           ;	Brown-out Reset Enable
  1344                           ;	BOREN = SBORDIS, BOR enabled in hardware (SBOREN is ignored)
  1345                           ;	Brown-out Reset Voltage
  1346                           ;	BORV = 190, BOR set to 1.9V nominal
  1347                           ;	Low-Power Brown-out Reset
  1348                           ;	nLPBOR = OFF, Low-Power Brown-out Reset disabled
  1349  300002                     	org	3145730
  1350  300002  5F                 	db	95
  1351                           
  1352                           ;Config register CONFIG2H @ 0x300003
  1353                           ;	Watchdog Timer Enable bits
  1354                           ;	WDTEN = OFF, WDT disabled in hardware (SWDTEN ignored)
  1355                           ;	Watchdog Timer Postscaler
  1356                           ;	WDTPS = 32768, 1:32768
  1357  300003                     	org	3145731
  1358  300003  3C                 	db	60
  1359                           
  1360                           ; Padding undefined space
  1361  300004                     	org	3145732
  1362  300004  FF                 	db	255
  1363                           
  1364                           ;Config register CONFIG3H @ 0x300005
  1365                           ;	CCP2 MUX bit
  1366                           ;	CCP2MX = RC1, CCP2 input/output is multiplexed with RC1
  1367                           ;	PORTB A/D Enable bit
  1368                           ;	PBADEN = ON, PORTB<5:0> pins are configured as analog input channels on Reset
  1369                           ;	Timer3 Clock Input MUX bit
  1370                           ;	T3CMX = RC0, T3CKI function is on RC0
  1371                           ;	SDO Output MUX bit
  1372                           ;	SDOMX = RB3, SDO function is on RB3
  1373                           ;	Master Clear Reset Pin Enable
  1374                           ;	MCLRE = ON, MCLR pin enabled; RE3 input disabled
  1375  300005                     	org	3145733
  1376  300005  D3                 	db	211
  1377                           
  1378                           ;Config register CONFIG4L @ 0x300006
  1379                           ;	Stack Full/Underflow Reset
  1380                           ;	STVREN = ON, Stack full/underflow will cause Reset
  1381                           ;	Single-Supply ICSP Enable bit
  1382                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
  1383                           ;	Dedicated In-Circuit Debug/Programming Port Enable
  1384                           ;	ICPRT = OFF, ICPORT disabled
  1385                           ;	Extended Instruction Set Enable bit
  1386                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled
  1387                           ;	Background Debugger Enable bit
  1388                           ;	DEBUG = 0x1, unprogrammed default
  1389  300006                     	org	3145734
  1390  300006  85                 	db	133
  1391                           
  1392                           ; Padding undefined space
  1393  300007                     	org	3145735
  1394  300007  FF                 	db	255
  1395                           
  1396                           ;Config register CONFIG5L @ 0x300008
  1397                           ;	Block 0 Code Protect
  1398                           ;	CP0 = OFF, Block 0 is not code-protected
  1399                           ;	Block 1 Code Protect
  1400                           ;	CP1 = OFF, Block 1 is not code-protected
  1401                           ;	Block 2 Code Protect
  1402                           ;	CP2 = OFF, Block 2 is not code-protected
  1403                           ;	Block 3 Code Protect
  1404                           ;	CP3 = OFF, Block 3 is not code-protected
  1405  300008                     	org	3145736
  1406  300008  0F                 	db	15
  1407                           
  1408                           ;Config register CONFIG5H @ 0x300009
  1409                           ;	Boot Block Code Protect
  1410                           ;	CPB = OFF, Boot block is not code-protected
  1411                           ;	Data EEPROM Code Protect
  1412                           ;	CPD = OFF, Data EEPROM is not code-protected
  1413  300009                     	org	3145737
  1414  300009  C0                 	db	192
  1415                           
  1416                           ;Config register CONFIG6L @ 0x30000A
  1417                           ;	Block 0 Write Protect
  1418                           ;	WRT0 = OFF, Block 0 (0800-1FFFh) is not write-protected
  1419                           ;	Block 1 Write Protect
  1420                           ;	WRT1 = OFF, Block 1 (2000-3FFFh) is not write-protected
  1421                           ;	Block 2 Write Protect
  1422                           ;	WRT2 = OFF, Block 2 (04000-5FFFh) is not write-protected
  1423                           ;	Block 3 Write Protect
  1424                           ;	WRT3 = OFF, Block 3 (06000-7FFFh) is not write-protected
  1425  30000A                     	org	3145738
  1426  30000A  0F                 	db	15
  1427                           
  1428                           ;Config register CONFIG6H @ 0x30000B
  1429                           ;	Configuration Registers Write Protect
  1430                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  1431                           ;	Boot Block Write Protect
  1432                           ;	WRTB = OFF, Boot block (0000-7FFh) is not write-protected
  1433                           ;	Data EEPROM Write Protect
  1434                           ;	WRTD = OFF, Data EEPROM is not write-protected
  1435  30000B                     	org	3145739
  1436  30000B  E0                 	db	224
  1437                           
  1438                           ;Config register CONFIG7L @ 0x30000C
  1439                           ;	Block 0 Table Read Protect
  1440                           ;	EBTR0 = OFF, Block 0 is not protected from table reads executed in other blocks
  1441                           ;	Block 1 Table Read Protect
  1442                           ;	EBTR1 = OFF, Block 1 is not protected from table reads executed in other blocks
  1443                           ;	Block 2 Table Read Protect
  1444                           ;	EBTR2 = OFF, Block 2 is not protected from table reads executed in other blocks
  1445                           ;	Block 3 Table Read Protect
  1446                           ;	EBTR3 = OFF, Block 3 is not protected from table reads executed in other blocks
  1447  30000C                     	org	3145740
  1448  30000C  0F                 	db	15
  1449                           
  1450                           ;Config register CONFIG7H @ 0x30000D
  1451                           ;	Boot Block Table Read Protect
  1452                           ;	EBTRB = OFF, Boot block is not protected from table reads executed in other blocks
  1453  30000D                     	org	3145741
  1454  30000D  40                 	db	64
  1455                           tosu	equ	0xFFF
  1456                           tosh	equ	0xFFE
  1457                           tosl	equ	0xFFD
  1458                           stkptr	equ	0xFFC
  1459                           pclatu	equ	0xFFB
  1460                           pclath	equ	0xFFA
  1461                           pcl	equ	0xFF9
  1462                           tblptru	equ	0xFF8
  1463                           tblptrh	equ	0xFF7
  1464                           tblptrl	equ	0xFF6
  1465                           tablat	equ	0xFF5
  1466                           prodh	equ	0xFF4
  1467                           prodl	equ	0xFF3
  1468                           indf0	equ	0xFEF
  1469                           postinc0	equ	0xFEE
  1470                           postdec0	equ	0xFED
  1471                           preinc0	equ	0xFEC
  1472                           plusw0	equ	0xFEB
  1473                           fsr0h	equ	0xFEA
  1474                           fsr0l	equ	0xFE9
  1475                           wreg	equ	0xFE8
  1476                           indf1	equ	0xFE7
  1477                           postinc1	equ	0xFE6
  1478                           postdec1	equ	0xFE5
  1479                           preinc1	equ	0xFE4
  1480                           plusw1	equ	0xFE3
  1481                           fsr1h	equ	0xFE2
  1482                           fsr1l	equ	0xFE1
  1483                           bsr	equ	0xFE0
  1484                           indf2	equ	0xFDF
  1485                           postinc2	equ	0xFDE
  1486                           postdec2	equ	0xFDD
  1487                           preinc2	equ	0xFDC
  1488                           plusw2	equ	0xFDB
  1489                           fsr2h	equ	0xFDA
  1490                           fsr2l	equ	0xFD9
  1491                           status	equ	0xFD8

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     20      23
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    write_string_LCD@s	PTR const unsigned char  size(2) Largest target is 11
		 -> STR_2(CODE[7]), STR_1(CODE[11]), 


Critical Paths under _main in COMRAM

    _main->_write_int_LCD
    _write_string_LCD->_send_to_LCD
    _write_int_LCD->___awdiv
    ___awdiv->___wmul
    _set_cursor_pos->_LCD_cmd
    _set_LCD_dir->_LCD_cmd
    _LCD_init->_LCD_cmd

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1828
                           _LCD_init
                            _measure
                        _set_LCD_dir
                     _set_cursor_pos
                      _write_int_LCD
                   _write_string_LCD
 ---------------------------------------------------------------------------------
 (1) _write_string_LCD                                     2     0      2     212
                                              2 COMRAM     2     0      2
                        _send_to_LCD
 ---------------------------------------------------------------------------------
 (1) _write_int_LCD                                        6     4      2    1276
                                             14 COMRAM     6     4      2
                            ___awdiv
                             ___wmul
                        _send_to_LCD
 ---------------------------------------------------------------------------------
 (2) _send_to_LCD                                          2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     604
                                              6 COMRAM     8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _set_cursor_pos                                       5     4      1     280
                                              1 COMRAM     5     4      1
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _set_LCD_dir                                          1     1      0      45
                                              1 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (1) _measure                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             1     1      0      15
                                              1 COMRAM     1     1      0
                            _LCD_cmd
 ---------------------------------------------------------------------------------
 (2) _LCD_cmd                                              1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_init
     _LCD_cmd
   _measure
   _set_LCD_dir
     _LCD_cmd
   _set_cursor_pos
     _LCD_cmd
   _write_int_LCD
     ___awdiv
       ___wmul (ARG)
     ___wmul
     _send_to_LCD
   _write_string_LCD
     _send_to_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      29        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     14      17       1       24.2%
BITBIGSFRll         38      0       0      27        0.0%
BITBIGSFRhlllh      2D      0       0      23        0.0%
BITBIGSFRhhh        29      0       0      20        0.0%
BITBIGSFRhllll       8      0       0      24        0.0%
BITBIGSFRlhl         5      0       0      26        0.0%
BITBIGSFRhlh         3      0       0      22        0.0%
BITBIGSFRlhh         1      0       0      25        0.0%
BITBIGSFRhhl         1      0       0      21        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      17      28        0.0%
DATA                 0      0      17       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Fri Jun 03 11:59:25 2022

                        l21 0A90                          l30 0AD0                          l24 0B9E  
                        l40 09BA                          l41 09EA                          l33 0B8A  
                        l65 0992                          l59 0B42                          u70 0AA6  
                        u71 0AA2                          u80 0AC6                          u81 0AC2  
              ___awdiv@sign 000C         ___wmul@multiplicand 0003                         l112 0AF8  
                       l113 0B0C                         l116 0B68                         l347 08D6  
                       l801 0B76                         l803 0B78                         l805 0B7A  
                       l807 0B7C                         l861 0A44                         l941 0ADA  
                       l791 0B96                         l871 0A52                         l863 0A46  
                       l951 0B0A                         l943 0ADC                         l793 0B9A  
                       l881 0A7C                         l873 0A54                         l865 0A48  
                       l945 0AE6                         l795 0B9C                         l883 0A82  
                       l875 0A5A                         l867 0A4E                         l859 0A40  
                       l947 0AEA                         l939 0AD2                         l891 0AB4  
                       l789 0B8E                         l877 0A68                         l869 0A50  
                       l949 0AFE                         l893 0AC6                         l885 0A94  
                       l797 0B6C                         l879 0A6E                         l895 0ACC  
                       l887 0AA6                         l799 0B72                         l889 0AAC  
                       l997 0B44                         l999 0B60                         u120 0AF8  
                       u200 0884                         u121 0AF4                         u201 0880  
                       u210 08A0                         u211 089C                         u220 08C6  
                       u221 08C2                         u230 0B42                         u231 0B3E  
                       u240 094C                         u241 0948                         u170 0826  
                       u250 097A                         u171 0822                         u251 0976  
                       u180 0840                         u181 083C                         u190 0866  
                       u191 0862                         u267 0B82                         u277 0A60  
                       u287 0A74                         u297 0A88                         wreg 000FE8  
           __end_of_LCD_cmd 0BA0                        l1011 0832                        l1003 0814  
                      l1021 0866                        l1013 0840                        l1005 0818  
                      l1101 0A18                        l1031 08A0                        l1023 086E  
                      l1015 0848                        l1007 0826                        l1103 0A1E  
                      l1113 09D4                        l1041 08C6                        l1033 08A8  
                      l1025 0876                        l1017 084C                        l1009 082E  
                      l1105 0A28                        l1051 09A0                        l1043 08CE  
                      l1035 08AA                        l1027 0884                        l1019 0854  
                      l1107 0A2C                        l1053 09AA                        l1037 08B0  
                      l1029 088A                        l1055 09B0                        l1047 0996  
                      l1039 08B6                        l1071 0B26                        l1049 099A  
                      l1081 093A                        l1073 08D8                        l1065 0B0E  
                      l1059 09C0                        l1083 094C                        l1075 08E0  
                      l1067 0B12                        l1091 09F0                        l1085 0968  
                      l1077 08F8                        l1069 0B22                        l1093 09F2  
                      l1087 097A                        l1079 0926                        l1095 09F6  
                      l1097 0A02                        l1089 09EC                        l1099 0A0C  
                      STR_1 0801                        STR_2 080C                        _LATC 000F8B  
                      _LATD 000F8C                        _main 09EC                        prodh 000FF4  
                      prodl 000FF3                        start 0000                ___param_bank 000000  
          __end_of_LCD_init 0A92                       ?_main 0001             __end_of___awdiv 08D8  
                     _T0CON 000FD5             ___awdiv@divisor 0009                       _T1CON 000FCD  
           ___awdiv@counter 000B                       _TMR1H 000FCF                       _TMR0L 000FD6  
                     _TMR1L 000FCE                       _TRISD 000F95             __end_of_measure 0B0E  
                     _count 0015              write_int_LCD@x 000F                       tablat 000FF5  
                     status 000FD8             __initialization 0BA0                ?_set_LCD_dir 0001  
              __end_of_main 0A40           set_cursor_pos@Pos 0006           set_cursor_pos@col 0002  
         set_cursor_pos@row 0005                      ??_main 0015               __activetblptr 000002  
                 ??_LCD_cmd 0001                ?_send_to_LCD 0001            ___awdiv@dividend 0007  
                    _LCDdir 0017                      _OSCCON 000FD3                      ___wmul 0B44  
                 ??___awdiv 000B            ___awdiv@quotient 000D  write_int_LCD@HundrethDigit 0014  
                    isa$std 000001                   ??_measure 0001                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
                __accesstop 0060     __end_of__initialization 0BA6                   ?_LCD_init 0001  
             ___rparam_used 000001              __pcstackCOMRAM 0001                   LCD_cmd@cx 0001  
          _write_string_LCD 0B0E                  ??_LCD_init 0002                     ?___wmul 0001  
                   _LCD_cmd 0B8C               _write_int_LCD 08D8                     __Hparam 0000  
                   __Lparam 0000                     ___awdiv 0814                __psmallconst 0800  
                   __pcinit 0BA0                     __ramtop 0800                     __ptext0 09EC  
                   __ptext1 0B0E                     __ptext2 08D8                     __ptext3 0B6A  
                   __ptext4 0B44                     __ptext5 0814                     __ptext6 0994  
                   __ptext7 0A92                     __ptext8 0AD2                     __ptext9 0A40  
                   _measure 0AD2        end_of_initialization 0BA6           write_string_LCD@s 0003  
             __Lmediumconst 0000              ?_write_int_LCD 000F              _set_cursor_pos 0994  
    write_int_LCD@UnitDigit 0012                   _TRISAbits 000F92                   _TRISCbits 000F94  
  __end_of_write_string_LCD 0B44               send_to_LCD@xy 0002              __end_of___wmul 0B6A  
    __end_of_set_cursor_pos 09EC         start_initialization 0BA0             ??_write_int_LCD 0011  
                  ??___wmul 0005                set_LCD_dir@d 0002             ?_set_cursor_pos 0002  
                  ?_LCD_cmd 0001                 __pbssCOMRAM 0015               ??_set_LCD_dir 0002  
                  ?___awdiv 0007                 __smallconst 0800                    ?_measure 0001  
             ??_send_to_LCD 0001              ___wmul@product 0005                    _LATCbits 000F8B  
                  _LCD_init 0A40                    _PIR1bits 000F9E         __end_of_set_LCD_dir 0AD2  
         ___wmul@multiplier 0001           ?_write_string_LCD 0003         __end_of_send_to_LCD 0B8C  
        ??_write_string_LCD 0005                    __Hrparam 0000                    __Lrparam 0000  
                  __ptext10 0B8C                  _T1GCONbits 000FCC            ??_set_cursor_pos 0003  
                  isa$xinst 000000                 _set_LCD_dir 0A92                 _send_to_LCD 0B6A  
     __end_of_write_int_LCD 0994     write_int_LCD@TenthDigit 0013  
